# Compose supports declaring default environment variables in an environment file named .env placed in the folder docker-compose command is executed from (current working directory).
# Compose expects each line in an env file to be in VAR=VAL format. Lines beginning with # (i.e. comments) are ignored, as are blank lines.
# Note: Values present in the environment at runtime will always override those defined inside the .env file. Similarly, values passed via command-line arguments take precedence as well.

# Stripe setup
# ------------

# The checkout process on Store.BlazorWasm uses Stripe for payment processing in order to maintain PCI DSS compliance
# For more information on this, read Stripe's guide here: https://stripe.com/gb/guides/pci-compliance

# You can register for a free Stripe developer account at www.stripe.com

# The Secret Key must be stored securely in an environment variable or key vault
# The Publishable Key can be publicly-accessible in an application
# The WhSecret is only used for local testing using the Stripe CLI: https://stripe.com/docs/stripe-cli
# Further details on Stripe keys can be found here: https://stripe.com/docs/keys

STRIPE_SECRET_KEY=<your_stripe_secret_key>
STRIPE_PUBLISHABLE_KEY=<your_stripe_publishable_key>
STRIPE_WHSECRET=<your_stripe_webhook_secret>

# Azure setup
# -----------

# The Admin.BlazorServer project allows authorised users to add new products to the Products.API. This includes uploading an image of the product.
# While the base images are stored at imgbb.com, new ones added programmatically should be uploaded to a cloud storage location (such as Azure).

# This requires an Azure storage account to be set up in advance. Containers should have their public access level set to Blob.
# To configure Azure uploads, add the settings below:

# AZURE_STORAGE_CONNECTION_STRING is the private connection string value for your storage account, accessible via the Azure portal
# AZURE_STORAGE_BASE_URL is the publicly-available URL where your images can be accessed

# Other values can be set as you wish, but are required
# MAX_FILE_UPLOAD_SIZE is the size in bytes, so 1Mb = 1048576
# AZURE_CONTAINERS_ALLOWED should be a comma-separated list of containers available for upload in your storage account
# FILE_UPLOAD_TYPES_ALLOWED restricts the types of files than can be uploaded

AZURE_STORAGE_CONNECTION_STRING=<your_secure_storage_account_connection_string>
AZURE_STORAGE_BASE_URL=https://{storage-account-name}.blob.core.windows.net
MAX_FILE_UPLOAD_SIZE=1048576
AZURE_CONTAINERS_ALLOWED=images,test-container
FILE_UPLOAD_TYPES_ALLOWED=image/jpeg,image/png
FILE_EXTENSION_TYPES_ALLOWED=.jpeg,.jpg,.png

# Identity setup
# --------------

# The Identity.API microservice uses Json Web Tokens for authentication and authorisation.
# The Token Service within Identity.API uses several values to generate valid tokens:

# JWT_KEY should be a random string of characters that must be kept private and should not be pushed to a remote git repository
# JWT_EXPIRY_IN_DAYS is self-explanatory - it's the number of days that the JWT will remain valid for after generation

JWT_KEY=example:Q^a8wzV9ue3/y+G+tBkR}Ha@
JWT_EXPIRY_IN_DAYS=1
