@using Admin.BlazorServer.Models
@using Admin.BlazorServer.Shared

@inherits TestContext

@code {
    [Fact]
    public void MobileMenu_Renders_Correct_Number_Of_NavMenuItems()
    {
        List<NavMenuItem> NavMenuItems = new List<NavMenuItem>();
        NavMenuItems.Add(new NavMenuItem { DisplayName = "SiteStatus", Url = "sitestatus" });
        NavMenuItems.Add(new NavMenuItem { DisplayName = "StockControl", Url = "stockcontrol" });

        var cut = Render(@<MobileMenu navMenuItems=@NavMenuItems />);

        var menuItems = cut.FindAll("a");
        Assert.Equal(3, menuItems.Count); // a hard-coded 'customer orders' item is also always added
    }

    [Fact]
    public void MobileMenu_Correctly_Renders_Supplied_Display_Name()
    {
        List<NavMenuItem> NavMenuItems = new List<NavMenuItem>();
        NavMenuItems.Add(new NavMenuItem { DisplayName = "Test Display Name", Url = "/" });

        var cut = Render(@<MobileMenu navMenuItems=@NavMenuItems />);
        var menuItem = cut.Find("a");

        Assert.Equal("Test Display Name", menuItem.TextContent);
    }

    [Fact]
    public void MobileMenu_Correctly_Renders_Supplied_Url()
    {
        List<NavMenuItem> NavMenuItems = new List<NavMenuItem>();
        NavMenuItems.Add(new NavMenuItem { DisplayName = "Add Product", Url = "addproduct" });

        var cut = Render(@<MobileMenu navMenuItems=@NavMenuItems />);
        var menuItem = cut.Find("a");

        Assert.Equal("addproduct", menuItem.GetAttribute("href"));
    }

    [Fact]
    public void MobileMenu_Correctly_Renders_One_NavMenuItem_Link()
    {
        List<NavMenuItem> NavMenuItems = new List<NavMenuItem>();
        NavMenuItems.Add(new NavMenuItem { DisplayName = "Add Product", Url = "addproduct" });

        var cut = Render(@<MobileMenu navMenuItems=@NavMenuItems />);
        var menuItem = cut.Find("a");

        menuItem.MarkupMatches(@<a href="addproduct" class:ignore="">
                                    Add Product
                                </a>
        );
    }
}
