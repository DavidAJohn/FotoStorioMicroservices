@page "/login"

@using Store.BlazorWasm.Contracts
@using Store.BlazorWasm.Models

@inject NavigationManager navigationManager
@inject IAuthenticationService authenticationService
@inject IToastService toastService

<div class="mx-2 mt-8 md:container">
    <div class="p-3 lg:p-4 flex justify-center">
        <div class="text-center shadow-md bg-white rounded-md overflow-hidden relative lg:w-112">
            <div class="hidden md:block h-16 w-auto bg-blue-900 py-2">
                <span class="flex items-center justify-center text-gray-50 mt-1">
                    <!-- https://icons.getbootstrap.com/icons/camera/ -->
                    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-camera" viewBox="0 0 16 16">
                        <path d="M15 12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.172a3 3 0 0 0 2.12-.879l.83-.828A1 1 0 0 1 6.827 3h2.344a1 1 0 0 1 .707.293l.828.828A3 3 0 0 0 12.828 5H14a1 1 0 0 1 1 1v6zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4H2z"/>
                        <path d="M8 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5zm0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7zM3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z"/>
                    </svg>
                    <div class="text-gray-50 text-xl font-semibold ml-4">Foto Storio</div>
                </span>
            </div>
            <div class="p-4 lg:w-112">
                <div class="mb-4 text-lg md:text-xl lg:text-2xl font-bold">
                    Sign in to your account
                </div>
                <div class="mb-4 font-semibold text-sm lg:text-md text-gray-400">
                    <a href="/register" class="hover:text-blue-800">Don't have an account yet? Click here to register</a>
                </div>
                <div class="px-2 md:px-4 py-2">
                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <div class="mb-3 w-full text-left">
                            <label class="text-md font-semibold mb-1 ml-0">Email Address</label>
                            <InputText Id="email" Class="px-2 py-1 rounded-sm focus:border-blue-700 border-3 outline-none w-full" @bind-Value="loginModel.Email" />
                            <ValidationMessage For="@(() => loginModel.Email)" />
                        </div>
                        <div class="mb-4 w-full text-left">
                            <label class="text-md font-semibold mb-1 ml-0">Password</label>
                            <InputText Id="password" type="password" Class="px-2 py-1 rounded-sm focus:border-blue-700 border-3 outline-none w-full" @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>
                        <div class="my-4 w-full">
                            <button type="submit" class="bg-fotofuchsia text-gray-50 w-full p-2 mt-3 rounded-sm font-semibold fotofuchsia-ripple disabled:opacity-30 disabled:cursor-default" >
                                Sign In
                            </button>
                        </div>
                    </EditForm>
                </div>
                <div class="mb-4 font-semibold text-sm lg:text-md text-gray-400">
                    <a href="#" class="hover:text-blue-800">Forgotten your password?</a>
                </div>
                @if (ShowErrors)
                {
                    <div class="mx-2 animate-pulse">
                        <div class="bg-red-100 border-solid border-1 border-red-700 text-red-700 font-semibold my-8 py-2 rounded-sm relative w-full" role="alert">
                            <span class="block sm:inline">@Error</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await authenticationService.Login(loginModel);

        if (result.Successful)
        {
            toastService.ShowSuccess("You have successfully logged in to your account", "Logged In");
            navigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }
}
