@using Store.BlazorWasm.Models

<div class="relative inline-block text-left">
    <div>
        <button type="button" class="inline-flex justify-center w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-md font-semibold text-gray-700 hover:bg-gray-50 focus:outline-none" id="menu-button" 
            @onclick="ToggleDropdown">
            @dropdownTitle
            <!-- Heroicon name: solid/chevron-down -->
            <svg class="-mr-1 ml-2 h-6 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
        </button>
    </div>

    <!--
      Dropdown menu, show/hide based on menu state.

      Entering: "transition ease-out duration-100"
        From: "transform opacity-0 scale-95"
        To: "transform opacity-100 scale-100"
      Leaving: "transition ease-in duration-75"
        From: "transform opacity-100 scale-100"
        To: "transform opacity-0 scale-95"
    -->

    @if (dropdownOptions != null)
    {
        <div class="origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white focus:outline-none z-10 @DropdownCssClass" role="menu" tabindex="-1">
            <div class="py-2" role="none">
                @foreach (DropdownItem item in dropdownOptions)
                {
                    <a href="@item.OptionRef" class="text-gray-700 block px-4 py-2 text-md hover:bg-gray-200 hover:text-gray-700" role="menuitem" tabindex="-1" id="menu-item-@(@item.Id)">@item.OptionName</a>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter] 
    public string dropdownTitle { get; set; } = "Select";

    [Parameter]
    public List<DropdownItem> dropdownOptions { get; set; }

    private bool collapseDropdown = true;

    private string DropdownCssClass => collapseDropdown ? "collapse" : null;
    
    private void ToggleDropdown()
    {
        collapseDropdown = !collapseDropdown;
    }
}
