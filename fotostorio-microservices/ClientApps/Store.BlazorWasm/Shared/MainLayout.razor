@inherits LayoutComponentBase

@using Blazored.Toast.Configuration
@using Store.BlazorWasm.Contracts
@using Store.BlazorWasm.Models

@inject IProductService productService

<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="4"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fas fa-check-circle"
                InfoIcon="fas fa-info-circle"
                ErrorIcon="fas fa-exclamation-circle" />

<!-- navbar top layer -->
<nav class="bg-fotoblue" id="navbar-top">

    <div class="md:container">
        <!-- start container -->
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
            <div class="relative flex items-center justify-between h-16">

                <!-- Hamburger button for mobile menu -->
                <div class="absolute inset-y-0 left-0 flex items-center md:hidden" @onclick="ToggleNavMenu">
                    <button type="button" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-blue-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
                        <span class="sr-only">Open main menu</span>
                        <svg class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                        </svg>
                        <svg class="hidden h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>

                <!-- Site name and logo -->
                <SiteBranding />

                <!-- Search box -->
                <div class="hidden lg:flex xl:flex-1 lg:flex-row items-center">
                    <ClickSearch 
                        Placeholder="Search the store..." 
                        ButtonType="outlined"
                    />
                </div>

                <!-- Login/Register/User Details and cart -->
                <div class="flex flex-row items-center h-16">
                    <LoginDisplay />
                    <BasketDropdown />
                </div>

            </div>
        </div>
    </div> 
    <!-- end container -->

    <!-- Mobile menu -->
    <div class="md:hidden @NavMenuCssClass" id="mobile-menu">
        <MobileMenu navMenuItems=@NavMenuItems />
    </div>

</nav>

<!-- navbar second layer -->
<NavMenu navMenuItems=@NavMenuItems />

<!-- main body content -->
<main role="main" class="container max-w-7xl pb-12">
    <div class="container">
        <div class="py-3">
            @Body
        </div>
    </div> 
</main>

<!-- footer -->
<Footer />

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    public List<NavMenuItem> NavMenuItems = new List<NavMenuItem>();

    protected override async Task OnInitializedAsync()
    {
        await GetNavItems();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task GetNavItems()
    {
        var categories = await productService.GetProductCategoriesAsync();

        foreach (Category category in categories)
        {
            NavMenuItems.Add(new NavMenuItem { DisplayName = category.Name, Url = $"products/categories/{category.Id}" });
        }
    }

}
